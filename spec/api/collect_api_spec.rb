=begin
#Rakam API Documentation

#An analytics platform API that lets you create your own analytics services.

OpenAPI spec version: 0.5
Contact: contact@rakam.io
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for RakamClient::CollectApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CollectApi' do
  before do
    # run before each test
    @instance = RakamClient::CollectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CollectApi' do
    it 'should create an instact of CollectApi' do
      expect(@instance).to be_instance_of(RakamClient::CollectApi)
    end
  end

  # unit tests for batch_events
  # Collect multiple events
  # Returns 1 if the events are collected.
  # @param event_list 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'batch_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bulk_events
  # Collect Bulk events
  # Bulk API requires master_key as api key and designed to handle large value of data. The endpoint also accepts application/avro and text/csv formats. You need need to set &#39;collection&#39; and &#39;master_key&#39; query parameters if the content-type is not application/json.
  # @param event_list 
  # @param [Hash] opts the optional parameters
  # @return [SuccessMessage]
  describe 'bulk_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bulk_events_remote
  # Collect bulk events from remote
  # 
  # @param bulk_event_remote 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'bulk_events_remote test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for collect_event
  # Collect event
  # 
  # @param event 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'collect_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for commit_bulk_events
  # Commit Bulk events
  # 
  # @param commit_bulk_events 
  # @param [Hash] opts the optional parameters
  # @return [SuccessMessage]
  describe 'commit_bulk_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
